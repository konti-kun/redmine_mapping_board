<div class="contextual">
  <% if User.current.allowed_to?(:add_issues, @project, :global => true) && (@project.nil? || Issue.allowed_target_trackers(@project).any?) %>
  <%= link_to l(:label_new_note), new_mappingboard_note_path(mappingboard_id: @mappingboard.id), :remote => true, :class => "icon icon-add" %>
  <% end %>
</div>
<h2><%= l(:label_mapping_board) %></h2>
<%= csrf_meta_tags %>
<div class="svg_panel">
<svg>
<filter id="drop-shadow">
  <feGaussianBlur in="SourceAlpha" stdDeviation="3"></feGaussianBlur>
  <feOffset in="blur" result="offsetBlur" dx="2" dy="2"/>
</filter>
</svg>
</div>
<% content_for :header_tags do %>
  <%= stylesheet_link_tag 'jstoolbar' %>
<% end %>
<%= javascript_include_tag src ="https://d3js.org/d3.v5.min.js" %>
<script src="https://d3js.org/d3-collection.v1.min.js"></script>
<script src="https://d3js.org/d3-dispatch.v1.min.js"></script>
<script src="https://d3js.org/d3-dsv.v1.min.js"></script>
<script src="https://d3js.org/d3-request.v1.min.js"></script>
<%= javascript_include_tag src ="drawmap.js", :plugin => "redmine_mapping_board" %>
<%= javascript_include_tag src ="drawimages.js", :plugin => "redmine_mapping_board" %>
<script>
const params = {
  "issue_new_link" :'<%= link_to l(:label_issue_new), _new_project_issue_path(@project), :class => 'icon icon-add new-issue' %>',
  "issue_link" :"<%= url_for :controller => 'issues', :action => 'show', :id => 0 %>",
  "get_images_link" : "<%= url_for :controller => 'mappingimages', :action => 'get_images', :mappingboard_id => @mappingboard.id %>",
  "del_note" :"<%= url_for :controller => 'notes', :action => 'destroy', :mappingboard_id => @mappingboard.id, :id => 0 %>",
  "update_pos" :"<%= url_for :controller => 'notes', :action => 'update_pos', :mappingboard_id => @mappingboard.id, :id => 0 %>",
  "message_conform_del_note" :"<%= l(:message_conform_del_note) %>"
}
function main(){
  const svg = d3.select("svg");
  const content_node = d3.select("#content").node();
  svg
    .attr("width",content_node.clientWidth)
    .attr("height",content_node.clientHeight);

  svg
    .append("g")
      .attr("class", "ground")
    .append("rect").attr("opacity",-1)
      .attr("x",0).attr("y",0)
      .attr("width",svg.attr("width"))
      .attr("height",svg.attr("height"));
  svg
    .append("g")
      .attr("class", "images");
  svg
    .append("g")
      .attr("class", "notes");
  const selector = svg
    .append("g")
      .attr("class", "selector");

  svg
    .append("g")
    .attr("class", "range");

  function zoomed(){
    d3.select(".notes")
      .attr("transform", d3.event.transform);
    d3.select(".images")
      .attr("transform", d3.event.transform);
  }
  d3.select(".ground").call(
    d3.zoom().translateExtent(
        [[0, 0],[100000,100000]]
      ).scaleExtent([1/2, 12]).on("zoom",zoomed)
  );

  const BUTTONS = svg
    .append("g")
      .attr("class", "buttons");

  BUTTONS
    .append("rect")
      .attr("rx", 2).attr("ry", 2)
      .attr("x", 3).attr("y", 3)
      .attr("width", 30).attr("height", 30)
      .attr("fill","black")
      .attr("cursor","pointer")
      .on("click", function(d){
        drawimages(selector);
      });


  $.ajax({
    url: "<%= url_for :controller => 'notes', :action => 'index', :mappingboard_id => @mappingboard.id %>",
    method: "get",
    dataType: "json",
    success: function(datas){
      update_notes(datas, d3.select(".notes"));
    }
  });
}
main();
</script>
