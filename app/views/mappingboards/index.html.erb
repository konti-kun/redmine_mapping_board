<div class="contextual">
  <% if User.current.allowed_to?(:add_issues, @project, :global => true) && (@project.nil? || Issue.allowed_target_trackers(@project).any?) %>
  <%= link_to l(:label_new_note), mappingboards_new_path(project_id: @project.id), :remote => true, :class => "icon icon-add" %>
  <% end %>
</div>
<h2><%= l(:label_mapping_board) %></h2>
<%= csrf_meta_tags %>
<div class="svg_panel">
<svg width="1000" height="600">
<filter id="drop-shadow">
  <feGaussianBlur in="SourceAlpha" stdDeviation="3"></feGaussianBlur>
  <feOffset in="blur" result="offsetBlur" dx="2" dy="2"/>
</filter>
</svg>
</div>
<% content_for :header_tags do %>
  <%= stylesheet_link_tag 'jstoolbar' %>
<% end %>
<%= javascript_include_tag src ="https://d3js.org/d3.v5.min.js" %>
<script src="https://d3js.org/d3-collection.v1.min.js"></script>
<script src="https://d3js.org/d3-dispatch.v1.min.js"></script>
<script src="https://d3js.org/d3-dsv.v1.min.js"></script>
<script src="https://d3js.org/d3-request.v1.min.js"></script>
<%= javascript_include_tag src ="drawmap.js", :plugin => "redmine_mapping_board" %>
<script>
var params = {
  "issue_new_link" :'<%= link_to l(:label_issue_new), _new_project_issue_path(@project), :class => 'icon icon-add new-issue' %>',
  "issue_link" :"<%= url_for :controller => 'issues', :action => 'show', :id => 0 %>",
  "del_note" :"<%= url_for :controller => 'mappingboards', :action => 'del_note' %>",
  "update_pos" :"<%= url_for :controller => 'mappingboards', :action => 'update_pos' %>",
  "message_conform_del_note" :"<%= l(:message_conform_del_note) %>"
}
var formdata = new FormData();
var svg = d3.select("svg")
svg.append("g").attr("class", "ground")
  .append("rect").attr("opacity",-1)
  .attr("x",0).attr("y",0)
  .attr("width",svg.attr("width"))
  .attr("height",svg.attr("height"));
var notes = svg.append("g").attr("class", "notes");
svg.append("g").attr("class", "selector")
svg.append("g").attr("class", "range")
var zoomed = function(){
  d3.select(".notes").attr("transform", d3.event.transform);
}
d3.select(".ground").call(
  d3.zoom().translateExtent(
      [[0, 0],[100000,100000]]
    ).scaleExtent([1/2, 12]).on("zoom",zoomed)
);
var datas = <%= raw @items.to_json %>
update_notes(datas, notes, params);
</script>
